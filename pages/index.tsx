import Head from "next/head"
import Link from "next/link"
import {Tab} from "@headlessui/react"
import Masonry from 'react-masonry-css'
import classNames from 'classnames'
import Image from "next/image"

import type {LightGallery} from 'lightgallery/lightgallery'
import LightGalleryComponent from 'lightgallery/react';

// import styles
import 'lightgallery/css/lightgallery.css';
import 'lightgallery/css/lg-zoom.css';
import 'lightgallery/css/lg-thumbnail.css';

// import plugins if you need
import lgThumbnail from 'lightgallery/plugins/thumbnail';
import lgZoom from 'lightgallery/plugins/zoom';

// Landscape Images
import landscape3 from "../public/landscape/hanaleiBay.jpg"
import landscape4 from "../public/landscape/kalalauLookout.jpg"
import landscape5 from "../public/landscape/kauaiOcean.jpg"
import landscape8 from "../public/landscape/smokeyMountainsSunset.jpg"
import landscape10 from "../public/landscape/theNarrows.jpg"
import landscape11 from "../public/landscape/waimeaCanyon.jpg"
import landscape13 from "../public/landscape/zionCarsBackdrop.jpg"
import bryceCanyon from "../public/landscape/bryceCanyon.jpg"
import khanchenjunga from "../public/landscape/khanchenjunga.jpg"
import munnar from "../public/landscape/munnar.jpg"
import sinahgadFort from "../public/landscape/sinahgadFort.jpg"

// People Images
import people1 from "../public/people/arnie.jpg"
import people3 from "../public/people/lucas.jpg"
import people4 from "../public/people/nathan.jpg"
import people5 from "../public/people/alondraPoipu.jpg"

// Animal Images
import animal1 from "../public/animals/goat.jpg"
import animal2 from "../public/animals/running.jpg"
import animal3 from "../public/animals/hilton.jpg"
import animal4 from "../public/animals/lion.jpg"
import animal5 from "../public/animals/monkey.jpg"

const landscapeImages = [
  {
    image: khanchenjunga, 
    title: "Khanchenjunga, Sikkim",
    description: "Feast your eyes at the world's third largest mountain",
  },
  
  {
    image: landscape3, 
    title: "Hanelei Bay, Kauai",
    description: "My favorite place in Kauai",
  },
  {
    image: landscape10, 
    title: "Zion National Park: <i>The Narrows</i>, USA",
    description: "Favorite hike",
  },
  
  {
    image: landscape4, 
    title: "Kalalau Lookout, Kauai",
    description: "Clear skies make for the best views here",
  },
  {
    image: landscape5, 
    title: "Ocean Shore in Princeville, Kauai",
    description: "Most beautiful turquoise water",
  },
  {
    image: landscape8, 
    title: "Smokey Mountains National Park, USA",
    description: "Best sunset I have ever captured",
  },
  {
    image: landscape11, 
    title: "Waimea Canyon State Park, USA",
    description: "Photo By: Arnav Karnik",
  },
  {
    image: landscape13, 
    title: "Zion National Park, USA",
    description: "Felt like I was in the movie Cars",
  },
  {
    image: munnar, 
    title: "Munnar, India",
    description: "Vines intertwining along the tree.",
  },
  {
    image: sinahgadFort, 
    title: "Sinahgad Fort, India",
    description: "What a beautiful view near Pune",
  },
  {
    image: bryceCanyon, 
    title: "Bryce Canyon National Park, USA",
    description: "Seeing the Hoodoos fill the entire landscape was a lot to take in.",
  },
  
];

const peopleImages = [
  {
      image: people1, 
      title: "Arnav Karnik",
      description: "Welcome to my Photography Portfolio.",
    },
    {
      image: people3, 
      title: "Lucas",
      description: "Scavenging for which recipe to cook next",
    },
    {
      image: people5, 
      title: "Alondra",
      description: "On a morning stroll in Poipu",
    },
    {
      image: people4, 
      title: "Nathan",
      description: "Searching for apples to make apple pie",
    },
];

const animalImages = [
    {
      image: animal1, 
      title: "Mountain Goat",
      description: "Driving through Zion National Park and this guy wanted a photoshoot",
    },
    
    {
      image: animal2, 
      title: "Cute doggo",
      description: "Puppies are so full of energy!",
    },
    {
      image: animal4, 
      title: "Lioness",
      description: "Bhannerghatta National Park, Bangalore",
    },
    {
      image: animal3, 
      title: "Hilton",
      description: "Beautiful dog from Gangtok hotel",
    },
    {
      image: animal5, 
      title: "Monkey",
      description: "Nandi Hills",
    },
];


import { useRef } from "react"

const tabs = [
  {
    key: 'people',
    display: 'People'
  },
  {
    key: 'landscapes',
    display: 'Landscapes'
  },
  {
    key: 'animals',
    display: 'Animals'
  }
]

export default function AboutMe() {

  const lightboxRef = useRef<LightGallery | null>(null)

  return (
    <div className="h-full bg-stone-950 overflow-auto">
      <Head>
        <title>Photography Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/camera.png" />
      </Head>

      <header className="fixed top-0 w-full z-10 flex justify-between items-center h-[90px] px-10">
        <span className="uppercase text-lg font-large">
          Arnav Karnik Photography
        </span>
        <Link href="/aboutme" className="rounded-3xl bg-white text-stone-900 px-3 py-2 hover:bg-opacity-90">
          About Me
        </Link>

      </header>

      <main className="pt-[110px]">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex items-center gap-12">
              {tabs.map((tab) => {
                return <Tab key={tab.key} className="p-2">
                {({selected}) => (
                  <span className={classNames("uppercase text-lg", selected ? 'text-white' : 'text-stone-600')}>
                    {tab.display}
                  </span>
                  )}
              </Tab>
              })
              }
              
              
            </Tab.List>
            <Tab.Panels className="h-full bg-stone-900 bg-opacity-80 h-full max-w-[900px] w-full p-2 sm:p-4 my-6 rounded">
              <Tab.Panel className="overflow-auto">
                <Masonry 
                  breakpointCols={2} 
                  className="flex gap-4" 
                  columnClassName=""
                >

                  {peopleImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                      
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                    
                  })}
                 
                </Masonry>

                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={peopleImages.map(image => ({
                  src: image.image.src, 
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />

              </Tab.Panel>
              <Tab.Panel className="overflow-auto rounded">
              <Masonry 
                  breakpointCols={2} 
                  className="flex gap-4" 
                  columnClassName=""
                >

                  {landscapeImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                      
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                    
                  })}
                 
                </Masonry>

                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={landscapeImages.map(image => ({
                  src: image.image.src, 
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />
              </Tab.Panel>
              <Tab.Panel className="overflow-auto rounded">
              <Masonry 
                  breakpointCols={2} 
                  className="flex gap-4" 
                  columnClassName=""
                  key={3}
                >

                  {animalImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                      
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                    
                  })}
                 
                </Masonry>

                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={animalImages.map(image => ({
                  src: image.image.src, 
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
    
      </main>

      <footer className="h-[90px] flex justify-center items-center uppercase text-lg font-medium">
        <p>Arnav Karnik Photography</p>
      </footer>
    </div>
    
  )
}