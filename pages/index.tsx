import Head from "next/head"
import Link from "next/link"
import {Tab} from "@headlessui/react"
import Masonry from 'react-masonry-css'
import classNames from 'classnames'
import Image from "next/image"


import type {LightGallery} from 'lightgallery/lightgallery'
import LightGalleryComponent from 'lightgallery/react';


// import styles
import 'lightgallery/css/lightgallery.css';
import 'lightgallery/css/lg-zoom.css';
import 'lightgallery/css/lg-thumbnail.css';


// import plugins if you need
import lgThumbnail from 'lightgallery/plugins/thumbnail';
import lgZoom from 'lightgallery/plugins/zoom';


import landscapeImages from "./imageData";
import peopleImages from "./imageData";
import allImages from "./imageData";

import { useRef } from "react"


const tabs = [
  {
    key: 'all',
    display: 'All'
  },
  {
    key: 'landscapes',
    display: 'Landscapes'
  },
  {
    key: 'people',
    display: 'People'
  }, 
  {
    key: 'Travel', 
    display: 'Travel'
  }
]
export default function Home() {
  console.log(allImages)
  const lightboxRef = useRef<LightGallery | null>(null)

  return (
    <div className="h-full bg-stone-950 overflow-auto">
      <Head>
        <title>Photography Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/camera.png" />
      </Head>


      <header className="fixed top-0 w-full z-10 flex justify-between items-center h-[90px] px-10">
        <span className="uppercase text-lg font-large">
          Arnav Karnik Photography
        </span>
        <Link href="mailto:arnavkarnikphotos@gmail.com" className="rounded-3xl bg-white text-stone-900 px-3 py-2 hover:bg-opacity-90">
          Contact Me
        </Link>


      </header>


      <main className="pt-[110px]">
        <div className="flex flex-col items-center h-full">
          <Tab.Group>
            <Tab.List className="flex items-center gap-12">
              {tabs.map((tab) => {
                return <Tab key={tab.key} className="p-2">
                {({selected}) => (
                  <span className={classNames("uppercase text-lg", selected ? 'text-white' : 'text-stone-600')}>
                    {tab.display}
                  </span>
                  )}
              </Tab>
              })
              }
             
             
            </Tab.List>
            <Tab.Panels className="h-full bg-stone-900 bg-opacity-80 h-full max-w-[900px] w-full p-2 sm:p-4 my-6 rounded">
              <Tab.Panel className="overflow-auto">
                <Masonry
                  key={0}
                  breakpointCols={2}
                  className="flex gap-4"
                  columnClassName=""
                >


                  {allImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                     
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                   
                  })}
                 
                </Masonry>


                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={allImages.map(image => ({
                  key: image.image.src,
                  src: image.image.src,
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />


              </Tab.Panel>
              <Tab.Panel className="overflow-auto rounded">
              <Masonry
                  key={1}
                  breakpointCols={2}
                  className="flex gap-4"
                  columnClassName=""
                >


                  {landscapeImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                     
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                   
                  })}
                 
                </Masonry>


                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={landscapeImages.map(image => ({
                  key: image.image.src,
                  src: image.image.src,
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />
              </Tab.Panel>
              <Tab.Panel className="overflow-auto rounded">
              <Masonry
                  key={2}
                  breakpointCols={2}
                  className="flex gap-4"
                  columnClassName=""
                >


                  {peopleImages.map((image, index) => {
                    return <div className="relative">
                      <Image
                      key={image.image.src}
                      src={image.image}
                      alt="placeholder"
                      className="my-4 hover:opacity-70 cursor-pointer rounded"
                      placeholder="blur"
                     
                      />
                      <div className="absolute w-full h-full inset-0 bg-transparent hover:bg-stone-900 hover:bg-opacity-10 cursor-pointer"
                        onClick={() => {
                          lightboxRef.current?.openGallery(index);
                        }}
                      ></div>
                    </div>
                   
                  })}
                 
                </Masonry>


                <LightGalleryComponent
                onInit={(ref) => {
                  if (ref) {
                    lightboxRef.current = ref.instance
                  }
                }}
                download={false}
                speed={500}
                plugins={[lgThumbnail, lgZoom]}
                dynamic
                dynamicEl={peopleImages.map(image => ({
                  key: image.image.src,
                  src: image.image.src,
                  thumb: image.image.src,
                  subHtml: `<h4>${image.title}</h4><p>${image.description}</p>`,
                }))}
               
                />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
   
      </main>


      <footer className="h-[90px] flex justify-center items-center uppercase text-lg font-medium">
        <p>Arnav Karnik Photography</p>
      </footer>
    </div>
   
  )
}

